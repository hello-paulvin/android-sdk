// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'version.gradle'

buildscript {

    repositories {
        google()
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    versionCode = VERSIONCODE
    versionName = VERSIONNAME

    javaCompatVersion = JavaVersion.VERSION_1_8

    minSdkVersion = 19
    compileSdkVersion = 28
    targetSdkVersion = 28
    buildToolsVersion = "28.0.3"
    packagecloudWagonVersion = "0.0.6"

    gsonVersion = "2.8.5"
    bumptechGlideVersion = "4.8.0"

    androidMaterialVersion = "1.0.0"
    androidxTestCoreVersion = "1.0.0"
    androidxTestRunnerVersion = "1.1.0"
    androidxTestRulesVersion = "1.1.0"
    androidxTestEspressoVersion = "3.1.0"

    rxjavaVersion = "1.3.8"
    rxandroidVersion = "1.2.1"

    junitVersion = "4.12"
    mockitoCoreVersion = "2.21.0"
    robolectricVersion = "4.0"
    runnerVersion = "1.0.2"
    rulesVersion = "1.0.2"

    jsonsnapshotVersion = "1.0.12"
    harmcrestVersion = "1.3"
}

task buildci(type: GradleBuild) {

    if (versionName.endsWith('SNAPSHOT')) {
        // tasks for SNAPSHOT builds
        printf "Task for SNAPSHOT builds, uploading only to Nexus."
        tasks = ['clean', ':payment:test', ':payment:assemble', ':payment:uploadArchives']
    } else {
        // tasks for RELEASE builds, this will also upload to the external packagecloud.io
        printf "Task for RELEASE builds, uploading to Nexus and packagecloud.io."
        tasks = ['clean', ':payment:test', ':payment:assemble', ':payment:uploadArchives', 'payment:uploadExternal']
    }
}
