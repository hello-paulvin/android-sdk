apply plugin: 'com.android.library'

assemble.dependsOn('lint')

android {

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility rootProject.javaCompatVersion
        targetCompatibility rootProject.javaCompatVersion
    }

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "com.android.support:support-annotations:${rootProject.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportLibVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.supportLibVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "com.github.bumptech.glide:glide:${rootProject.bumptechGlideVersion}"

    testImplementation "io.github.json-snapshot:json-snapshot:${rootProject.jsonsnapshotVersion}"
    testImplementation "junit:junit:${rootProject.junitVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.mockitoCoreVersion}"
    testImplementation "org.robolectric:robolectric:${rootProject.robolectricVersion}"

    androidTestImplementation "com.android.support.test:runner:${rootProject.runnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoCoreVersion}"
}
